
  # The cyberdojo/versioner refresh-env.sh script
  # https://github.com/cyber-dojo/versioner/blob/master/sh/refresh-env.sh
  # currently relies on being able to:
  #   - get the :latest image from dockerhub
  #   - extract the SHA env-var embedded inside it
  #   - use the 1st 7 chars of the SHA as a latest-equivalent tag from dockerhub

  push-latest:
    runs-on: ubuntu-latest
    needs: [setup, deploy-to-prod]
    permissions:
      id-token: write
      contents: read
    env:
      IMAGE_NAME:        ${{ needs.setup.outputs.image_name }}
      IMAGE_TAG:         ${{ needs.setup.outputs.image_tag }}
      KOSLI_FINGERPRINT: ${{ needs.build-image.outputs.digest }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region:            ${{ needs.setup.outputs.aws_region }}
          role-duration-seconds: 900
          role-session-name:     ${{ github.event.repository.name }}
          role-to-assume:        arn:aws:iam::${{ needs.setup.outputs.aws_account_id_beta }}:role/${{ needs.setup.outputs.gh_actions_iam_role_name }}
          mask-aws-account-id:   no

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull image from ECR registry
        run:
          docker image pull "${IMAGE_NAME}@sha256:${KOSLI_FINGERPRINT}"

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Tag images and push to Dockerhub
        run: |
          TAGGED="cyberdojo/${SERVICE_NAME}:${IMAGE_TAG}"
          docker tag "${IMAGE_NAME}" "${TAGGED}"
          docker push "${TAGGED}"
          
          LATEST="cyberdojo/${SERVICE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${LATEST}"
          docker push "${LATEST}"