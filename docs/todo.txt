
Record of tests that fail with "undefined method `[]' for nil"
  LS51P4
  D9wds1 x 2
  D2k761
  Gw41s9
  Sp4Dk7
  e09h35
  Ws6861

from
  model/group_v2.rb:143:in `manifest_filename'
  model/kata_v2.rb:359:in `manifest_filename'
  model/group_v1.rb:154:in `manifest_filename'


NoMethodError: undefined method `[]' for nil
    model/id_pather.rb:14:in `id_path3'
    model/id_pather.rb:4:in `group_id_path'
    model/group_v2.rb:143:in `manifest_filename'
    model/group_v2.rb:113:in `manifest_create_command'
    model/group_v2.rb:28:in `create'
    model.rb:18:in `group_create'


model/id_pather.rb:14:in `id_path3'
  def id_path3(type, id, *parts)
    ..
    args = ['', type, id[0..1], id[2..3], id[4..5]]  # [*]

So id is passed into:
  id_path3
  group_id_path
  manifest_filename
  manifest_create_command

class Group_v2
  ...
  def create(manifest)
    manifest.merge!(default_options)
    manifest['version'] = 2
    manifest['created'] = time.now
    id = manifest['id'] = IdGenerator.new(@externals).group_id

So it appears we are getting a nil back from the expression

    IdGenerator.new(@externals).group_id

which in turn gets it from generate_id()
It looks like we are dropping off the end of the 42.times loop
Why to we do disk.run for one command and disk.assert for the other ?
Maybe do disk.assert for both and do some logging in the rescue ?

class IdGenerator
  ...
  def group_id
    generate_id(:group_id_path, :kata_id_path)
  end

  def generate_id(pather, not_pather)
    42.times.find do
      id = SIZE.times.map{ ALPHABET[random_index] }.join
      if reserved?(id)
        next
      end
      # Ensure group IDs and kata IDs do not clash with each other
      dir_exists_command = disk.dir_exists_command(method(not_pather).call(id))
      if disk.run(dir_exists_command)
        next
      end

      dir_make_command = disk.dir_make_command(method(pather).call(id))
      begin
        disk.assert(dir_make_command)
      rescue
        next
      end

      return id
    end
  end





---------------------------------------

Resurrect:
 - bin/create_almost_full_group.sh
 - test/server/cyber-dojo/create_almost_full_group.rb
