name: Main (Work in Progress)

on:
  workflow_call:
    secrets:
      DOCKER_PASS:
        required: true
      DOCKER_USER:
        required: true
      KOSLI_API_TOKEN:
        required: true
      SNYK_TOKEN:
        required: false # change to true once Snyk is added to all pipelines

    inputs:
      KOSLI_HOST:
        required: true
        type: string
      KOSLI_CLI_VERSION:
        required: true
        type: string


env: 
  KOSLI_ORG: cyber-dojo
  KOSLI_FLOW: saver
  KOSLI_HOST: ${{ inputs.KOSLI_HOST }}               # https://app.kosli.com
  KOSLI_CLI_VERSION: ${{ inputs.KOSLI_CLI_VERSION }} # "2.6.11"
  KOSLI_TEMPLATE: "artifact"
  # KOSLI_DRY_RUN: "True"
  # AWS_REGION: eu-central-1
  # AWS_ACCOUNT_ID: 772819027869

jobs:

  build-test-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    steps:
      - uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          echo "image_tag=${TAG}" >> ${GITHUB_ENV}

      - name: Build
        run: |
          ./sh/build.sh
          echo "${DOCKER_PASS}" | docker login --username "${DOCKER_USER}" --password-stdin
          docker push cyberdojo/saver:${{ env.image_tag }}
          docker logout
      
      - name: Setup Kosli CLI
        uses: kosli-dev/setup-cli-action@v2
        with:
          version:
            ${{ env.KOSLI_CLI_VERSION }}

      - name: Create Kosli flow
        env:
          KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
          KOSLI_TEMPLATE: ${{ env.KOSLI_TEMPLATE }}
        run: |
          kosli create flow ${{ env.KOSLI_FLOW }} \
            --description "Group/Kata model+persistence"

      - name: Report image to Kosli
        env:
          KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
        run: |
          kosli report artifact cyberdojo/saver:${{ env.image_tag }} \
            --artifact-type docker
