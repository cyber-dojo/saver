name: Build image, test it, deploy to aws-beta and aws-prod

on:
  workflow_dispatch:

jobs:

  pre-build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.prep.outputs.image_tag }}
    steps:
    - uses: actions/checkout@v3
    - name: Prepare
      id: prep
      run: |
        TAG=$(echo $GITHUB_SHA | head -c7)
        echo "image_tag=${TAG}" >> ${GITHUB_OUTPUT}

  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run:
          ./sh/build.sh

      - name: Push image to public registry (dockerhub)
        run: |
          echo "${DOCKER_PASS}" | docker login --username "${DOCKER_USER}" --password-stdin
          docker push cyberdojo/saver:$(echo $GITHUB_SHA | head -c7)
          docker logout

  kosli-staging:
    needs: [pre-build, build]
    uses: cyber-dojo/saver/.github/workflows/aws_main.yml@main
    secrets:
      KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    with:
      KOSLI_HOST: https://staging.app.kosli.com
      IMAGE_TAG: ${{ needs.pre-build.outputs.image_tag }}
      AWS_ACCOUNT_ID_BETA: 244531986313
      AWS_ACCOUNT_ID_PROD: 274425519734


#  kosli-production:
#    needs: [pre-build, build]
#    uses: cyber-dojo/saver/.github/workflows/aws_main.yml@main
#    secrets:
#      KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
#      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#    with:
#      KOSLI_HOSTNAME: https://app.kosli.com
#      IMAGE_TAG: ${{ needs.pre-build.outputs.image_tag }}
#      AWS_ACCOUNT_ID_BETA: 244531986313
#      AWS_ACCOUNT_ID_PROD: 274425519734
